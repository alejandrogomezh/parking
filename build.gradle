buildscript {
	ext {
		springBootVersion = '1.5.10.RELEASE'
		scalaVersion = '2.13.0-M3'
	}
	repositories {
		mavenCentral()
	    //maven {url "https://plugins.gradle.org/m2/"}
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		//classpath "gradle.plugin.org.gosu-lang.gosu:gradle-gosu-plugin:0.3.6"
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
//apply plugin: "org.gosu-lang.gosu"
apply plugin: 'scala'
apply plugin: 'war'
apply plugin: 'jacoco'

group = appGroup
version = appVersion
sourceCompatibility = appSourceCompatibility
targetCompatibility = appTargetCompatibility

jar {
    baseName = appName
    version =  appVersion
    manifest {
        attributes 'Implementation-Title': appName,
                   'Implementation-Version': appVersion
    }
}

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-jersey')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-web-services')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	runtime('mysql:mysql-connector-java')
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	
	
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('com.h2database:h2')
	
	
    //compile('org.scala-lang:scala-compiler:${scalaVersion}')
    //compile('org.scala-lang:scala-dist:${scalaVersion}')
    //compile('org.scala-lang:scalap:${scalaVersion}')
    compile('org.scala-lang:scala-library:${scalaVersion}')
    //compile('org.scala-lang:scala-reflect:${scalaVersion}')
    //testCompile('org.scalatest:scalatest_sjs0.6_2.13.0-M3:${scalaVersion}')
    //testCompile('org.scalatest:scalatest-app_sjs0.6_2.13.0-M3:${scalaVersion}')
    //testCompile('org.scalatest:scalatest_2.13.0-M3:${scalaVersion}')
    //testCompile('org.scalatest:scalatest-app_2.13.0-M3:${scalaVersion}')

}

sourceSets {
    main {
        scala {
            srcDirs = ['src/main/scala']
        }
    }
    test {
        scala {
            srcDirs = ['src/test/scala']
        }
    }
}

test {
	jacoco {
		append = false
		destinationFile = file("jacoco/jacocoTest.exec")
	}
	reports.junitXml.destination =  file("jacoco/test-results")
}

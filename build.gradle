buildscript {
	ext {
		springBootVersion = '1.5.10.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'war'
apply plugin: 'jacoco'

group = appGroup
version = appVersion
sourceCompatibility = appSourceCompatibility
targetCompatibility = appTargetCompatibility

jar {
    baseName = appName
    version =  appVersion
    manifest {
        attributes 'Implementation-Title': appName,
                   'Implementation-Version': appVersion
    }
}

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-jersey')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile('org.springframework.boot:spring-boot-starter-web-services')
	compile('org.springframework.boot:spring-boot-starter-jdbc')
	runtime('mysql:mysql-connector-java')
	providedRuntime('org.springframework.boot:spring-boot-starter-tomcat')
	
	
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('com.h2database:h2')

	testCompile('org.seleniumhq.selenium:selenium-java:3.9.1')
	/*
	testCompile('org.seleniumhq.selenium:selenium-leg-rc:3.9.1')
	testCompile('org.seleniumhq.selenium:selenium-support:3.9.1')
	testCompile('org.seleniumhq.selenium:selenium-api:3.9.1')
	testCompile('org.seleniumhq.selenium:selenium-server:3.9.1')

	// Drivers
	testCompile('org.seleniumhq.selenium:selenium-safari-driver:3.9.1')
	testCompile('org.seleniumhq.selenium:selenium-remote-driver:3.9.1')
	testCompile('org.seleniumhq.selenium:selenium-opera-driver:3.9.1')
	testCompile('org.seleniumhq.selenium:selenium-ie-driver:3.9.1')
	testCompile('org.seleniumhq.selenium:selenium-firefox-driver:3.9.1')
	testCompile('org.seleniumhq.selenium:selenium-edge-driver:3.9.1')
	testCompile('org.seleniumhq.selenium:selenium-chrome-driver:3.9.1')
	*/
}

test {
	jacoco {
		append = false
		destinationFile = file("jacoco/jacocoTest.exec")
	}
	reports.junitXml.destination =  file("jacoco/test-results")
}
